name: .NET Build

on:
  push:
    branches: [ "master", "feature/*" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: ubuntu-latest

    env:
      solution_name: Orleans.Streams.Kafka-build.sln
      # Test_Project_Path: your-test-project-path

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Print Versions
      run: |
        dotnet --version
        dotnet --info
        echo Node Version:
        node -v

    - name: Extract Version
      run: |
        package_version=$(node -p -e "require('./package.json').version")
        echo "Output [$package_version]"
        echo "package_version=$package_version" >> $GITHUB_OUTPUT

    # Execute all unit tests in the solution
#     - name: Execute unit tests
#       run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore ./"$solution_name" /p:Configuration="$Configuration"
      env:
        Configuration: ${{ matrix.configuration }}

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: | 
        echo "$package_version"
        echo my_var [${{needs.extract-version}}]
        # dotnet pack "$solution_name" /p:PackageVersion=$package_version -c release
        # dotnet nuget push ./*.nupkg -k $env:NUGET -s "nuget.org"
